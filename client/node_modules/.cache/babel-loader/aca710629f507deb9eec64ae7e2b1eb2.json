{"ast":null,"code":"var _jsxFileName = \"/Users/danial_asraf/Desktop/covidid/client/src/App.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport Routes from \"./Routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AuthApi from \"./utils/createContext\";\nimport { hasSignned, signin } from \"./api/auth-api\";\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const handleOnChange = e => {\n    if (e.target.name === \"username\") {\n      setEmail(e.target.value);\n    } else {\n      setPassword(e.target.value);\n    }\n  };\n\n  const handleSignIn = async e => {\n    e.preventDefault();\n    const res = await signin({\n      email,\n      password\n    });\n\n    if (res.data.auth) {\n      setAuth(true);\n    }\n\n    console.log(res);\n    const adminId = useMemo(() => {\n      res.data.adminId;\n    }, []);\n  };\n\n  const readSession = async () => {\n    const result = await hasSignned(); //result.data.auth\n\n    const {\n      data\n    } = result;\n    const {\n      auth\n    } = data;\n\n    if (auth) {\n      setAuth(true);\n    }\n\n    console.log(result);\n  };\n\n  useEffect(() => {\n    readSession(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthApi.Provider, {\n    value: {\n      auth,\n      setAuth,\n      handleOnChange,\n      handleSignIn,\n      adminId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danial_asraf/Desktop/covidid/client/src/App.js"],"names":["React","useState","useEffect","useMemo","Routes","BrowserRouter","Router","AuthApi","hasSignned","signin","App","auth","setAuth","email","setEmail","password","setPassword","handleOnChange","e","target","name","value","handleSignIn","preventDefault","res","data","console","log","adminId","readSession","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,gBAAnC;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;;AAEA,QAAMgB,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAChCN,MAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASE,KAAV,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACD;AACF,GAND;;AAQA,QAAMC,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMf,MAAM,CAAC;AAAEI,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAxB;;AACA,QAAIS,GAAG,CAACC,IAAJ,CAASd,IAAb,EAAmB;AACjBC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,UAAMI,OAAO,GAAGzB,OAAO,CAAC,MAAM;AAC5BqB,MAAAA,GAAG,CAACC,IAAJ,CAASG,OAAT;AACD,KAFsB,EAEpB,EAFoB,CAAvB;AAGD,GAVD;;AAYA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,MAAM,GAAG,MAAMtB,UAAU,EAA/B,CAD8B,CAE9B;;AACA,UAAM;AAAEiB,MAAAA;AAAF,QAAWK,MAAjB;AACA,UAAM;AAAEnB,MAAAA;AAAF,QAAWc,IAAjB;;AACA,QAAId,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACD,GATD;;AAWA5B,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AAAElB,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBK,MAAAA,cAAjB;AAAiCK,MAAAA,YAAjC;AAA+CM,MAAAA;AAA/C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF;AASD;;AAED,eAAelB,GAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport Routes from \"./Routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AuthApi from \"./utils/createContext\";\nimport { hasSignned, signin } from \"./api/auth-api\";\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const handleOnChange = (e) => {\n    if (e.target.name === \"username\") {\n      setEmail(e.target.value);\n    } else {\n      setPassword(e.target.value);\n    }\n  };\n\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    const res = await signin({ email, password });\n    if (res.data.auth) {\n      setAuth(true);\n    }\n    console.log(res);\n    const adminId = useMemo(() => {\n      res.data.adminId;\n    }, []);\n  };\n\n  const readSession = async () => {\n    const result = await hasSignned();\n    //result.data.auth\n    const { data } = result;\n    const { auth } = data;\n    if (auth) {\n      setAuth(true);\n    }\n    console.log(result);\n  };\n\n  useEffect(() => {\n    readSession();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <AuthApi.Provider\n      value={{ auth, setAuth, handleOnChange, handleSignIn, adminId }}\n    >\n      <Router>\n        <Routes />\n      </Router>\n    </AuthApi.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}