{"ast":null,"code":"var _jsxFileName = \"/Users/danial_asraf/Desktop/covidid/client/src/components/CreateAccount.jsx\";\nimport React, { useState, useMemo } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport QRGenerator from \"./QRcode\";\nimport Copyright from \"./Copyright\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"../styles.css\";\nimport { signup } from \"../api/auth-api\";\nimport generator from \"generate-password\";\nimport { v4 as uuid } from \"uuid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }));\n} // We can use inline-style\n\n\nconst style = {\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  borderRadius: 3,\n  border: 0,\n  color: \"white\",\n  height: 48,\n  padding: \"0 30px\",\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\n};\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function CreateAccount() {\n  const classes = useStyles();\n  const [showForm, setShowForm] = useState(true);\n  const [qrgenerator, setQrGenerator] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const joindate = new Date(); //const [adminId] = useState(uuid());\n\n  const adminId = useMemo(() => uuid(), []);\n  const password = useMemo(() => generator.generate({\n    length: 8,\n    numbers: true\n  }), []);\n\n  const handleOnChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n  };\n\n  const handleCreateUserAccount = async e => {\n    e.preventDefault();\n    setShowForm(false);\n    setQrGenerator(true);\n    console.log(email, password);\n    const res = await signup({\n      joindate,\n      email,\n      password,\n      adminId\n    }); //console.log(res);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"User Account Registration\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, showForm ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: style,\n    className: classes.submit,\n    onClick: handleCreateUserAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Create Account\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CSSTransition, {\n    in: qrgenerator,\n    timeout: 300,\n    classNames: \"alert\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(QRGenerator, {\n    password: password,\n    adminId: adminId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: qrgenerator,\n    timeout: 300,\n    classNames: \"alert\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    style: style,\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 2000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"Account Successfully Created!\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/danial_asraf/Desktop/covidid/client/src/components/CreateAccount.jsx"],"names":["React","useState","useMemo","Avatar","Button","CssBaseline","TextField","Box","LockOutlinedIcon","Typography","Container","makeStyles","QRGenerator","Copyright","CSSTransition","signup","generator","v4","uuid","Snackbar","MuiAlert","Alert","props","style","background","borderRadius","border","color","height","padding","boxShadow","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","CreateAccount","classes","showForm","setShowForm","qrgenerator","setQrGenerator","email","setEmail","joindate","Date","adminId","password","generate","length","numbers","handleOnChange","e","target","name","value","handleCreateUserAccount","preventDefault","console","log","res","open","setOpen","handleClick","handleClose","event","reason"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport QRGenerator from \"./QRcode\";\nimport Copyright from \"./Copyright\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"../styles.css\";\nimport { signup } from \"../api/auth-api\";\nimport generator from \"generate-password\";\nimport { v4 as uuid } from \"uuid\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// We can use inline-style\nconst style = {\n  background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n  borderRadius: 3,\n  border: 0,\n  color: \"white\",\n  height: 48,\n  padding: \"0 30px\",\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function CreateAccount() {\n  const classes = useStyles();\n  const [showForm, setShowForm] = useState(true);\n  const [qrgenerator, setQrGenerator] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const joindate = new Date();\n  //const [adminId] = useState(uuid());\n  const adminId = useMemo(() => uuid(), []);\n  const password = useMemo(\n    () =>\n      generator.generate({\n        length: 8,\n        numbers: true,\n      }),\n    []\n  );\n\n  const handleOnChange = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n  };\n\n  const handleCreateUserAccount = async (e) => {\n    e.preventDefault();\n    setShowForm(false);\n    setQrGenerator(true);\n    console.log(email, password);\n    const res = await signup({\n      joindate,\n      email,\n      password,\n      adminId,\n    });\n\n    //console.log(res);\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          User Account Registration\n        </Typography>\n        <form className={classes.form} noValidate>\n          {showForm ? (\n            <div>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange={handleOnChange}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={style}\n                className={classes.submit}\n                onClick={handleCreateUserAccount}\n              >\n                Create Account\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <CSSTransition\n                in={qrgenerator}\n                timeout={300}\n                classNames=\"alert\"\n                unmountOnExit\n              >\n                <QRGenerator password={password} adminId={adminId} />\n              </CSSTransition>\n              <CSSTransition\n                in={qrgenerator}\n                timeout={300}\n                classNames=\"alert\"\n                unmountOnExit\n              >\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  style={style}\n                  className={classes.submit}\n                >\n                  Sign In\n                </Button>\n              </CSSTransition>\n              <Snackbar\n                open={open}\n                autoHideDuration={2000}\n                onClose={handleClose}\n              >\n                <Alert onClose={handleClose} severity=\"success\">\n                  Account Successfully Created!\n                </Alert>\n              </Snackbar>\n            </div>\n          )}\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}