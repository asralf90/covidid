{"ast":null,"code":"var _jsxFileName = \"/Users/danial_asraf/Desktop/covidid/client/src/components/QRcode.jsx\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { v4 as uuid } from \"uuid\";\nimport QRCode from \"react-qr-code\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nexport default function QRGenerator() {\n  //   const adminId = uuid();\n  const [adminId] = useState(uuid());\n  const [qrcode, setQrcode] = useState({\n    value: \"\",\n    copied: false\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"caption\",\n    paragraph: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Admin ID : \", adminId, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: adminId,\n    onCopy: () => setQrcode({ ...qrcode,\n      copied: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FileCopyIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }))), qrcode.copied ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }\n  }, \" Copied.\") : null, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"This is a success message!\"))), /*#__PURE__*/React.createElement(QRCode, {\n    value: adminId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/danial_asraf/Desktop/covidid/client/src/components/QRcode.jsx"],"names":["React","useState","Typography","Button","FileCopyIcon","v4","uuid","QRCode","CopyToClipboard","Snackbar","MuiAlert","QRGenerator","adminId","qrcode","setQrcode","value","copied","open","setOpen","handleClick","handleClose","event","reason","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC;AACA,QAAM,CAACC,OAAD,IAAYX,QAAQ,CAACK,IAAI,EAAL,CAA1B;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC;AACnCc,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,MAAM,EAAE;AAF2B,GAAD,CAApC;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMkB,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,SAAnC;AAA6C,IAAA,SAAS,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcN,OADd,eAEE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEA,OADR;AAEE,IAAA,MAAM,EAAE,MAAME,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaG,MAAAA,MAAM,EAAE;AAArB,KAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAFF,EAUGH,MAAM,CAACG,MAAP,gBAAgB;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB,GAAiE,IAVpE,eAWE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEN,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,IAAxC;AAA8C,IAAA,OAAO,EAAEG,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CAXF,CADF,eAkBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAER,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD","sourcesContent":["import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport { v4 as uuid } from \"uuid\";\nimport QRCode from \"react-qr-code\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nexport default function QRGenerator() {\n  //   const adminId = uuid();\n  const [adminId] = useState(uuid());\n\n  const [qrcode, setQrcode] = useState({\n    value: \"\",\n    copied: false,\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Typography align=\"center\" variant=\"caption\" paragraph=\"true\">\n        Admin ID : {adminId}\n        <CopyToClipboard\n          text={adminId}\n          onCopy={() => setQrcode({ ...qrcode, copied: true })}\n        >\n          <Button>\n            <FileCopyIcon />\n          </Button>\n        </CopyToClipboard>\n        {qrcode.copied ? <span style={{ color: \"red\" }}> Copied.</span> : null}\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"success\">\n            This is a success message!\n          </Alert>\n        </Snackbar>\n      </Typography>\n      <QRCode value={adminId} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}